% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Model-methods.R
\name{dose}
\alias{dose}
\alias{dose,numeric,Model,Samples-method}
\alias{dose-Model}
\alias{dose,numeric,LogisticNormal,Samples-method}
\alias{dose-LogisticNormal}
\alias{dose,numeric,LogisticLogNormal,Samples-method}
\alias{dose-LogisticLogNormal}
\alias{dose,numeric,LogisticLogNormalSub,Samples-method}
\alias{dose-LogisticLogNormalSub}
\alias{dose,numeric,ProbitLogNormal,Samples-method}
\alias{dose-ProbitLogNormal}
\alias{dose,numeric,ProbitLogNormalRel,Samples-method}
\alias{dose-ProbitLogNormalRel}
\alias{dose,numeric,LogisticLogNormalMixture,Samples-method}
\alias{dose-LogisticLogNormalMixture}
\alias{dose,numeric,LogisticIndepBeta,Samples-method}
\alias{dose-LogisticIndepBeta}
\alias{dose,numeric,LogisticIndepBeta,missing-method}
\alias{dose-LogisticIndepBeta-noSamples}
\title{Computing the Doses for a Given Probability, Model and Samples}
\usage{
dose(prob, model, samples, ...)

\S4method{dose}{numeric,Model,Samples}(prob, model, samples, ...)

\S4method{dose}{numeric,LogisticNormal,Samples}(prob, model, samples)

\S4method{dose}{numeric,LogisticLogNormal,Samples}(prob, model, samples)

\S4method{dose}{numeric,LogisticLogNormalSub,Samples}(prob, model, samples)

\S4method{dose}{numeric,ProbitLogNormal,Samples}(prob, model, samples)

\S4method{dose}{numeric,ProbitLogNormalRel,Samples}(prob, model, samples)

\S4method{dose}{numeric,LogisticLogNormalMixture,Samples}(prob, model, samples)

\S4method{dose}{numeric,LogisticIndepBeta,Samples}(prob, model, samples)

\S4method{dose}{numeric,LogisticIndepBeta,missing}(prob, model)
}
\arguments{
\item{prob}{(\code{number} or \code{numeric})\cr the toxicity probability which is
targeted. This must be a scalar if non-scalar \code{samples} are used.
It can be a vector of any finite length, if \code{samples} are scalars or
\code{samples} are not used, as e.g. in case of pseudo DLE
(dose-limiting events)/toxicity model.}

\item{model}{(\code{GeneralModel} or \code{ModelTox})\cr the model for single agent
dose escalation or pseudo DLE/toxicity model.}

\item{samples}{(\code{Samples})\cr the samples of model's parameters that will be
used to compute the resulting doses.}

\item{...}{model specific parameters when \code{samples} are not used.}
}
\value{
A \code{number} or \code{numeric} vector with the doses.
If non-scalar \code{samples} were used, then every element in the returned vector
corresponds to one element of a sample. Hence, in this case, the output
vector is of the same length as the sample vector. If scalar \code{samples} were
used or no \code{samples} were used, e.g. for pseudo DLE/toxicity \code{model},
then the output is of the same length as the length of the \code{prob}.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

A function that computes the dose reaching a specific target probability of
the occurrence of a DLE. The doses are computed based on the samples
of the model parameters.

Compute the dose level reaching a specific target probability of
the occurrence of a DLE, based on the samples of \code{\link{LogisticIndepBeta}} model
parameters.
The \code{\link{LogisticIndepBeta}} model is a Pseudo DLE (dose-limiting events)/toxicity.

Compute the dose level reaching a specific target probability of
the occurrence of a DLE, based on the \code{\link{LogisticIndepBeta}} model
parameters. All model parameters (except \code{prob}) should be present in the \code{model} object.
The \code{\link{LogisticIndepBeta}} model is a Pseudo DLE (dose-limiting events)/toxicity.
}
\details{
The \code{dose} function computes the doses for given toxicity
probabilities, using samples of the model parameter(s).
If you work with multivariate model parameters, then assume that your model
specific \code{dose} method receives a samples matrix where the rows correspond
to the sampling index, i.e. the layout is then \verb{nSamples x dimParameter}.
}
\note{
The \code{\link{dose}} and \code{\link{prob}} functions are the inverse of each other.
}
\examples{
# Create some data.
my_data <- Data(
  x = c(0.1, 0.5, 1.5, 3, 6, 10, 10, 10),
  y = c(0, 0, 0, 0, 0, 0, 1, 0),
  cohort = c(0, 1, 2, 3, 4, 5, 5, 5),
  doseGrid = c(0.1, 0.5, 1.5, 3, 6, seq(from = 10, to = 80, by = 2))
)

# Initialize a model, e.g. 'LogisticLogNormal'.
my_model <- LogisticLogNormal(
  mean = c(-0.85, 1),
  cov = matrix(c(1, -0.5, -0.5, 1), nrow = 2),
  ref_dose = 56
)

# Get samples from posterior.
my_options <- McmcOptions(burnin = 100, step = 2, samples = 20)
my_samples <- mcmc(data = my_data, model = my_model, options = my_options)

# Posterior for the dose achieving Prob(DLT) = 0.45.
dose(prob = 0.45, model = my_model, samples = my_samples)

# Create data from the 'Data' (or 'DataDual') class.
dlt_data <- Data(
  x = c(25, 50, 25, 50, 75, 300, 250, 150),
  y = c(0, 0, 0, 0, 0, 1, 1, 0),
  doseGrid = seq(from = 25, to = 300, by = 25)
)

# Initialize a toxicity model using 'LogisticIndepBeta' model.
dlt_model <- LogisticIndepBeta(
  binDLE = c(1.05, 1.8),
  DLEweights = c(3, 3),
  DLEdose = c(25, 300),
  data = dlt_data
)

# Get samples from posterior.
dlt_sample <- mcmc(data = dlt_data, model = dlt_model, options = my_options)

# Posterior for the dose achieving Prob(DLT) = 0.45.
dose(prob = 0.45, model = dlt_model, samples = dlt_sample)
dose(prob = c(0.45, 0.6), model = dlt_model)
}
\seealso{
\code{\link{doseFunction}}, \code{\link{prob}}.
}
