% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Model-methods.R
\name{prob}
\alias{prob}
\alias{prob,numeric,Model,Samples-method}
\alias{prob-Model}
\alias{prob,numeric,LogisticNormal,Samples-method}
\alias{prob-LogisticNormal}
\alias{prob,numeric,LogisticLogNormal,Samples-method}
\alias{prob-LogisticLogNormal}
\alias{prob,numeric,LogisticLogNormalSub,Samples-method}
\alias{prob-LogisticLogNormalSub}
\alias{prob,numeric,ProbitLogNormal,Samples-method}
\alias{prob-ProbitLogNormal}
\alias{prob,numeric,ProbitLogNormalRel,Samples-method}
\alias{prob-ProbitLogNormalRel}
\alias{prob,numeric,LogisticLogNormalMixture,Samples-method}
\alias{prob-LogisticLogNormalMixture}
\alias{prob,numeric,ModelTox,Samples-method}
\alias{prob-ModelTox}
\alias{prob,numeric,ModelTox,missing-method}
\alias{prob-ModelTox_noSamples}
\title{Computing Toxicity Probabilities for a Given Dose, Model and Samples}
\usage{
prob(dose, model, samples, ...)

\S4method{prob}{numeric,Model,Samples}(dose, model, samples, ...)

\S4method{prob}{numeric,LogisticNormal,Samples}(dose, model, samples)

\S4method{prob}{numeric,LogisticLogNormal,Samples}(dose, model, samples)

\S4method{prob}{numeric,LogisticLogNormalSub,Samples}(dose, model, samples)

\S4method{prob}{numeric,ProbitLogNormal,Samples}(dose, model, samples)

\S4method{prob}{numeric,ProbitLogNormalRel,Samples}(dose, model, samples)

\S4method{prob}{numeric,LogisticLogNormalMixture,Samples}(dose, model, samples)

\S4method{prob}{numeric,ModelTox,Samples}(dose, model, samples, ...)

\S4method{prob}{numeric,ModelTox,missing}(dose, model, samples, ...)
}
\arguments{
\item{dose}{(\code{number} or \code{numeric})\cr the dose which is targeted.
This must be a scalar if non-scalar \code{samples} are used
(e.g. in case of dose escalation \code{model}).
It can be a vector of any finite length, if \code{samples} are scalars or
\code{samples} are not used (as e.g. in case of pseudo DLE
(dose-limiting events)/toxicity \code{model}).}

\item{model}{(\code{Model} or \code{ModelTox})\cr the model for single agent dose
escalation or pseudo DLE (dose-limiting events)/toxicity model.}

\item{samples}{(\code{Samples})\cr the samples of model's parameters that will be
used to compute toxicity probabilities by \code{model@prob} function.}

\item{...}{not used.}
}
\value{
A \code{number} or \code{numeric} vector with the toxicity probabilities.
If non-scalar \code{samples} were used, then every element in the returned vector
corresponds to one element of a sample. Hence, in this case, the output
vector is of the same length as the sample vector. If scalar \code{samples} were
used or no \code{samples} were used, e.g. for pseudo DLE/toxicity \code{model},
then the output is of the same length as the length of the \code{dose}.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

A function that computes toxicity probabilities for a given dose, a given
single agent dose escalation model, and samples.

Compute toxicity probabilities for a given dose, a given Pseudo
DLE (dose-limiting events)/toxicity model, and samples.

Compute the toxicity probability for a given dose and a given
Pseudo DLE (dose-limiting events)/toxicity model without samples.
All the arguments to \code{model@prob} function (except \code{dose}) should be
present in the \code{model} object.
}
\details{
The \code{prob} function computes the probability of toxicity for a given
\code{dose}, using samples of the model parameter(s). Hence, the vectors
of these samples must be included in the \code{samples} object.
If you work with multivariate model parameters, then assume that your model
specific \code{dose} function receives either one parameter value as a row vector,
or a samples matrix where the rows correspond to the sampling index, i.e.
the layout is then \verb{nSamples x dimParameter}.
}
\note{
The \code{\link{prob}} and \code{\link{dose}} functions are the inverse of each other.
}
\examples{
# Create some data.
my_data <- Data(
  x = c(0.1, 0.5, 1.5, 3, 6, 10, 10, 10),
  y = c(0, 0, 0, 0, 0, 0, 1, 0),
  cohort = c(0, 1, 2, 3, 4, 5, 5, 5),
  doseGrid = c(0.1, 0.5, 1.5, 3, 6, seq(from = 10, to = 80, by = 2))
)

# Initialize a model, e.g. 'LogisticLogNormal'.
my_model <- LogisticLogNormal(
  mean = c(-0.85, 1),
  cov = matrix(c(1, -0.5, -0.5, 1), nrow = 2),
  ref_dose = 56
)

# Get samples from posterior.
set.seed(94)
my_options <- McmcOptions(burnin = 100, step = 2, samples = 2000)
my_samples <- mcmc(data = my_data, model = my_model, options = my_options)

# Posterior for Prob(DLT | dose = 50).
prob(dose = 50, model = my_model, samples = my_samples)

# Create data from the 'DataDual' class.
my_data <- DataDual(
  x = c(25, 50, 25, 50, 75, 300, 250, 150),
  y = c(0, 0, 0, 0, 0, 1, 1, 0),
  w = c(0.31, 0.42, 0.59, 0.45, 0.6, 0.7, 0.6, 0.52),
  doseGrid = seq(from = 25, to = 300, by = 25)
)

# Initialize a model from 'ModelTox' class e.g using 'LogisticIndepBeta' model.
dlt_model <- LogisticIndepBeta(
  binDLE = c(1.05, 1.8),
  DLEweights = c(3, 3),
  DLEdose = c(25, 300),
  data = my_data
)

prob(dose = 100, model = dlt_model)
}
\seealso{
\code{\link{probFunction}}, \code{\link{dose}}.
}
