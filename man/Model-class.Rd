% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Model-class.R
\docType{class}
\name{Model-class}
\alias{Model-class}
\alias{.Model}
\alias{Model}
\title{\code{Model}}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#superseded}{\figure{lifecycle-superseded.svg}{options: alt='[Superseded]'}}}{\strong{[Superseded]}}

\code{\link{Model}} is the old class for single agent dose escalation, from which all
other specific models inherit. The \code{\link{Model}} class inherits from
\code{\link{GeneralModel}}. It will be soon removed as the \code{dose} and \code{prob} are
moved to a separate S4 class-specific methods.
}
\details{
The first argument of \code{dose} function must be the \code{prob}, which is a
scalar toxicity probability which is targeted. Further arguments are the
model parameters. The \code{dose} function computes, using model parameter(s)
(samples), the resulting dose. The model parameters are called exactly as
in the \code{model} and must be included in the \code{sample} vector. The vectors
of all samples for these parameters will then be supplied to the function.
Hence, a user function must be able to handle vectorized model parameters.

The first argument of \code{prob} function must be the \code{dose}, which is a scalar
dose. Further arguments are the model parameters. The \code{prob} function
computes, using model parameter(s) (samples), the resulting probability of
toxicity at that dose. Again here, the function should support vectorized
model parameters.

Note that \code{dose} and \code{prob} are the inverse functions of each other.

If you work with multivariate parameters, then assume that your functions
receive either one parameter value as a row vector, or a samples matrix
where the rows correspond to the sampling index, i.e. the layout is then
\verb{nSamples x dimParameter}.
}
\section{Slots}{

\describe{
\item{\code{dose}}{(\code{function})\cr a function computing the dose reaching a specific
target probability, based on the model parameters and additional prior
settings (see the details above).}

\item{\code{prob}}{(\code{function})\cr a function computing the probability of toxicity
for a specific dose, based on the model parameters and additional prior
settings (see the details above).}
}}

\note{
The \code{datamodel} must obey the convention that the data input is called
exactly as in the \code{\link{Data}} class. All prior distributions for parameters
should be contained in the model function \code{priormodel}. The background is
that this can be used to simulate from the prior distribution, before
obtaining any data.
}
