{
    "contents" : "\n\ndata <- Data(x=c(0.1, 1.5, 1.5, 0.1, 0.1, 10),\n             y=c(0, 0, 1, 0, 1, 0),\n             cohort=c(0, 0, 0, 1, 1, 1),\n             doseGrid=c(0.1, 0.5, 1.5, 3, 6,seq(from=10, to=80, by=2)),\n             placebo=TRUE)\n\n\nplot(data)\nplot(data,blind=TRUE)\n\n\n\n\n\n\nmodel <- LogisticLogNormal(mean=c(-0.85, 1),\n                           cov=matrix(c(1, -0.5, -0.5, 1),nrow=2),\n                           refDose=56)\n\ndata <- Data(x=c(0.1, 0.5, 1.5, 3, 6, 10, 10, 10),\n             y=c(0, 0, 0, 0, 0, 0, 1, 0),\n             cohort=c(0, 1, 2, 3, 4, 5, 5, 5),\n             doseGrid=c(0.1, 0.5, 1.5, 3, 6,seq(from=10, to=80, by=2)))\nplot(data)\n\noptions <- McmcOptions(burnin=100,step=2,samples=2000)\n\nmyIncrements <- IncrementsRelative(intervals=c(0, 20),\n                                   increments=c(1, 0.33))\n\nmyNextBest <- NextBestNCRM(target=c(0.2, 0.35),\n                           overdose=c(0.35, 1),\n                           maxOverdoseProb=0.25)\n\nmySize1 <- CohortSizeRange(intervals=c(0, 30),cohortSize=c(1, 3))\nmySize2 <- CohortSizeDLT(DLTintervals=c(0, 1),cohortSize=c(1, 3))\nmySize <- maxSize(mySize1, mySize2)\n\nmyStopping1 <- StoppingMinCohorts(nCohorts=3)\nmyStopping2 <- StoppingTargetProb(target=c(0.2, 0.35),prob=0.5)\nmyStopping3 <- StoppingMinPatients(nPatients=20)\n    myStopping <- (myStopping1 & myStopping2) | myStopping3\n\n\n\nemptydata <- Data(doseGrid=data@doseGrid,placebo=TRUE)\n\ndesign <- Design(model=model,\n                 nextBest=myNextBest,\n                 stopping=myStopping,\n                 increments=myIncrements,\n                 cohortSize=mySize,\n                 PLcohortSize=CohortSizeConst(2), # if data@placebo is TRUE, by default PLcohortSize=CohortSizeConst(1)\n                 data=emptydata,\n                 startingDose=3)\n\nmyTruth <- function(dose)\n{\n    model@prob(dose, alpha0=7, alpha1=8)\n}\n\nmySims <- simulate(design,args=NULL,truth=myTruth,\n                   nsim=2,seed=819,mcmcOptions=options,parallel=FALSE)\n\n# object=design\n# truth=myTruth\n# args=NULL\n# args <- as.data.frame(args)\n# nArgs <- max(nrow(args), 1L)\n# iterSim=1\n# thisArgs <- args[(iterSim - 1) %% nArgs + 1, , drop=FALSE]\n# \n# \n\nprint(plot(mySims@data[[1]],blind=FALSE))\nprint(plot(mySims@data[[1]],blind=TRUE))\n\nsimSum <- summary(mySims,\n                  truth=myTruth)\nsimSum\n\nprint(plot(simSum))\n\n\n\n# ----------------\n# ----------------\n# DUAL ENDPOINT\n# ----------------\n# ----------------\n\ndata <- DataDual(x=c(0.1, 1.5, 1.5, 0.1, 0.1, 10, 10),\n                 y=c(0, 0, 1, 0, 1, 0, 0),\n                 w=c(0.55, 0.52, 0.59, 0.60, 0.66, 1.2, 0.5),\n                 cohort=c(0, 0, 0, 1, 1, 1, 1),\n                 placebo=TRUE,\n                 doseGrid=c(0.1, 0.3, 0.5, 1.5, 3, 6,seq(from=10, to=80, by=2)))\nplot(data)\nplot(data,blind=TRUE)\n\n\n\n#emptydata <- DataDual(doseGrid=data@doseGrid)\nemptydata <- DataDual(doseGrid=data@doseGrid, placebo=TRUE)\n\nmodel <- DualEndpointRW(mu=c(0, 1),\n                        Sigma=matrix(c(1, 0, 0, 1), nrow=2),\n                        sigma2betaW=0.01,\n                        sigma2W=c(a=0.1, b=0.1),\n                        rho=c(a=1, b=1),\n                        smooth=\"RW1\")\n\nmyNextBest <- NextBestDualEndpoint(target=c(0.9, 1),\n                                   overdose=c(0.35, 1),\n                                   maxOverdoseProb=0.25)\n\nmyStopping4 <- StoppingTargetBiomarker(target=c(0.9, 1),\n                                       prob=0.5)\nmyStopping <- myStopping4 | StoppingMinPatients(40)\n\nmyIncrements <- IncrementsRelative(intervals=c(0, 20),\n                                   increments=c(5, 0.33))\n\ndesign <- DualDesign(model=model,\n                     data=emptydata,\n                     nextBest=myNextBest,\n                     stopping=myStopping,\n                     increments=myIncrements,\n                     cohortSize=CohortSizeConst(3),\n                     startingDose=6\n                     ,PLcohortSize=CohortSizeConst(2))\n\nbetaMod <- function (dose, e0, eMax, delta1, delta2, scal)\n{\n    maxDens <- (delta1^delta1) * (delta2^delta2)/((delta1 + delta2)^(delta1 + delta2))\n    dose <- dose/scal\n    e0 + eMax/maxDens * (dose^delta1) * (1 - dose)^delta2\n}\ntrueBiomarker <- function(dose)\n{\n    betaMod(dose, e0=0.2, eMax=0.6, delta1=5, delta2=5 * 0.5 / 0.5, scal=100)\n}\ntrueTox <- function(dose)\n{\n    pnorm((dose-60)/10)\n}\n\nmySims <- simulate(design,\n                   trueTox=trueTox,\n                   trueBiomarker=trueBiomarker,\n                   sigma2W=0.01,\n                   rho=0,\n                   nsim=2,\n                   parallel=FALSE,\n                   seed=3,\n                   mcmcOptions =\n                       McmcOptions(burnin=1000,\n                                   step=1,\n                                   samples=3000))\n\nprint(plot(mySims@data[[1]]))\n#print(plot(mySims@data[[1]],blind=TRUE))\n\nprint(plot(mySims))\n\nplot(summary(mySims,\n             trueTox=trueTox,\n             trueBiomarker=trueBiomarker))\n\n\n\ndata <- DataDual(x=c(0.1, 0.1, 6, 6, 6),\n                 y=c(0, 0, 0, 0, 0),\n                 w=c(0.12, 0.22, 5.52, 6.0, 8.0),\n                 doseGrid=c(0.1, 0.5, 1.5, 3, 6,seq(from=10, to=80, by=2)))\nprint(plot(data))\nmodel <- DualEndpointRW(mu=c(0, 1),\n                        Sigma=matrix(c(1, 0, 0, 1), nrow=2),\n                        #sigma2betaW=0.01,\n                        sigma2betaW=c(a=20, b=50),\n                        sigma2W=c(a=0.1, b=0.1),\n                        rho=c(a=1, b=1),\n                        smooth=\"RW1\")\n\noptions <- McmcOptions(burnin=100,\n                       step=2,\n                       samples=500)\nsamples <- mcmc(data, model, options)\n\n#print(plot(samples, model, data, extrapolate=FALSE))\nmyNextBest <- NextBestDualEndpoint(target=c(0.9, 1),\n                                   overdose=c(0.35, 1),\n                                   maxOverdoseProb=0.25)\nnextDose <- nextBest(myNextBest,\n                     doselimit=10,\n                     samples=samples,\n                     model=model,\n                     data=data)\nnextDose$value\nprint(nextDose$plot)\n\n",
    "created" : 1436861351915.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3953315914",
    "id" : "8FC0915C",
    "lastKnownWriteTime" : 1436865391,
    "path" : "C:/Users/palermog/Desktop/DanielPack.r",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}