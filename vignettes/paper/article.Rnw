\documentclass[article]{jss}

%%\usepackage{Sweave}
%% later to include the paper as vignette use:
%% \documentclass[nojss]{jss}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% declarations for jss.cls %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% to get the default layout:
<<echo=FALSE>>=
options(prompt = "R> ", continue = "+  ", width = 70, useFancyQuotes = FALSE)
Sys.setenv(TEXINPUTS=getwd(),
           BIBINPUTS=getwd(),
           BSTINPUTS=getwd())
@


%% almost as usual
\author{Daniel Saban\'es Bov\'e\\Hoffmann-La Roche Ltd \And
        Wai Yin Yeung\\Lancaster University \And
        Giuseppe Palermo\\Hoffmann-La Roche Ltd \And
        Thomas Jaki\\Lancaster University}
\title{Model-based Dose Escalation Designs in R with \pkg{crmPack}}

%% for pretty printing and a nice hypersummary also set:
\Plainauthor{Daniel Saban\'es Bov\'e,
    Wai Yin Yeung,
    Giuseppe Palermo,
    Thomas Jaki} %% comma-separated
\Plaintitle{Model-based Dose Escalation Designs in R with crmPack} %% without formatting
\Shorttitle{\pkg{crmPack}: Model-based Dose Escalation} %% a short title (if necessary)

%% an abstract and keywords
\Abstract{
%% todo: Abstract and keywords to be refined, only as a placeholder for now!
  Model-based dose escalation designs have gained increasing interest due to the need for more efficient and informative Phase I trials. The wide-spread implementation of such designs has been hindered by the need for either licensing specialized commercial software or programming the design and simulations from scratch for each project. Therefore we developed the R-package \pkg{crmPack}, which is now publicly available on CRAN. By providing a simple and unified object-oriented structure for model-based dose escalation designs, crmPack enables the use of standard designs, full flexibility to adapt designs to the project, and easy extension to new designs. The framework for the designs comprises the data structure, regression model and prior distribution specification, maximum increment rules, derivation of the next best dose, stopping rules for adaptive sample size, adaptive cohort sizes, and starting dose and dose grid specification. In addition to the classic continual reassessment method (CRM) and escalation with overdose control (EWOC) designs with possibly advanced prior specifications with e.g. mixtures and minimal informative priors, crmPack currently features dual-endpoint (safety and biomarker) designs and two-part (SAD followed by MAD part) designs. 
We introduce crmPack by outlining the design framework and show how easy it is to specify a design, run simulations, and report dose recommendations during the trial.
}
\Keywords{CRM, dose escalation, dual-endpoint design, \proglang{R}}
\Plainkeywords{CRM, dose escalation, dual-endpoint design, R} %% without formatting
%% at least one keyword must be supplied

%% publication information
%% NOTE: Typically, this can be left commented and will be filled out by the technical editor
%% \Volume{50}
%% \Issue{9}
%% \Month{June}
%% \Year{2012}
%% \Submitdate{2012-06-04}
%% \Acceptdate{2012-06-04}

%% The address of (at least) one author should be given
%% in the following format:
\Address{
  Daniel Saban\'es Bov\'e\\
  F. Hoffmann-La Roche Ltd\\
  Product Development Biostatistics\\
  Grenzacherstrasse 124\\
  4070 Basel, Switzerland\\
  E-mail: \email{sabanesd@roche.com}\\
  Telephone: +41/61/68-73470
}
%% It is also possible to add a telephone and fax number
%% before the e-mail in the following format:
%% Telephone: +43/512/507-7103
%% Fax: +43/512/507-2851

%% for those who use Sweave please include the following line (with % symbols):
%% need no \usepackage{Sweave.sty}

%% end of declarations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{document}

%% include your article here, just as usual
%% Note that you should use the \pkg{}, \proglang{} and \code{} commands.

%%\section[About Java]{About \proglang{Java}}
%% Note: If there is markup in \(sub)section, then it has to be escape as above.

\section{Introduction}

While the models underlying most model-based dose-finding procedures can easily be fit in standard software with the capability to fit generalized linear models (e.g. \code{PROC MIXED} in \proglang{SAS}, \code{glm} in \proglang{Stata} or \proglang{R}), there are still only few software solutions available dedicated to dose-finding studies.  

The commercial packages \proglang{East} (Cytel, Cambridge, MA) and \proglang{ADDPLAN} (ICON, Dublin, Ireland) both offer extensions to their basic design software for dose-finding studies (\pkg{ESCALATE} in \proglang{East} and \pkg{df} in \proglang{Addplan}) implementing the algorithmic 3+3 design \citep{carter1973} and various versions of the continual reassessment method \citep[CRM,][]{oquigley1990}. Similarly \proglang{FACTS} \citep{FACTS} also offers different common dose-finding methods. Due to the commercial nature of these implementations there is, however, a limitation on how much the designs can be tailored towards the individual needs of the study.\\

Similarly static implementations of methods for dose-finding are available in the \proglang{Stata} module \pkg{crm} \citep{StataCRM} which implements the CRM and the  \pkg{dfcrm} package in \proglang{R} which additionally implements the time-to-event CRM (TITE-CRM) \citep{cheung2000}. Finally the \pkg{bcrm} package \citep{sweeting2013} offers a wide range of different dose-finding designs. It implements a variety of one and two parameter models, facilitates different ways to specify prior distributions, escalation and stopping rules.\\

In this paper we introduce the \proglang{R} package \pkg{crmPack} for dose-finding studies. This package differs from existing implementations in three fundamental ways. Firstly it is written using a class structure that allows costumized methods to be added to the package while still being able to use the existing supporting functionalities. Secondly methods for studies with a placebo group (e.g. for healthy volunteer studies) are readily implemented. Thirdly dual endpoint dose-finding methods that incorporate both safety and efficacy are available.\\

In Section \ref{sec:framework} we discribe the underlying structure of the package while Section \ref{sec:using} provides some example of the usage of the package including how to add a costum method before we conclude with a discussion (Section \ref{sec:discussion}). \\


todo Daniel: 

- introduce dose escalation trials and in particular CRM designs. Use notation already from the \cite{Thall2010} paper

todo Thomas:



- Also review the software that is already available (not only in R but also elsewhere, e.g. Addplan, FACTS and East).

- Explicit comparison against R-package bcrm 

\section{Framework}\label{sec:framework}

todo Daniel: 

- high level introduction of the framework, referencing the \cite{Thall2010} paper

- introduce the general class structure in the package

\section{Using crmPack }\label{sec:using}

\subsection{Implementing a CRM trial}

We consider a trial in Type II diabetes carried out by Hoffmann-La Roche Ltd. For each subject, one response each of DLE and efficacy was observed. The DLE response is equal to 1 if any abnormal symptom is observed and 0 otherwise. In this Section we will show how to implement a CRM design for dose-escalation based on safety only.

\\ Suppose that 12 dose levels ranging from 25 to 300 mg in 25 mg increments of a novel agent are available, defining our dose-grid, with 25 mg being our starting dose. Our primary objective in conducting the dose-escalation study is to characterize the dose-toxicity relationship and to estimate the MTD. We choose to use in this case a Bayesian Logistic regression with overdose control \citep{Neuenschwander2008} for which the corresponding two-parameters model is described below.

\begin{equation} \label{eq:LogisticLogNormal}
logit(Pr(Y=1 | x,\theta)) \equiv logit(\pi(x,\theta)) = \alpha + \beta log(\frac{x}{x^*})
\end{equation}

where $\theta = (\alpha,\beta)$, $x$ is the dose and $x^*$ is a reference dose.  

\subsubsection*{Prior definition}

\\ A fundamental component of any Bayesian approach is the \emph{Prior} distribution for the model parameters, in this case $\alpha$ and $\beta$, which need to be defined. If previous studies on the same or similar compound are available, one could think of using an informative prior. Here we assume only very limited information is available and we use a \emph{Minimal Informative Prior} \citep{Neuenschwander2008} which can be easily obtained with the function \code{MinimalInformative}. As a result the obtained prior will be defined in terms a bivariate normal distribution for $(\alpha,log(\beta))$. 

\textbf{Below max.time=1. Once the paper is finalized we could change it into max.time=300}
<<min-inf,warning=FALSE,message=FALSE,results='hide'>>=
library(devtools); load_all()
coarseGrid <- c(25, 50, 100, 200, 300)
minInfModel <- 
  MinimalInformative(dosegrid = coarseGrid, refDose=100, logNormal=TRUE,
                     threshmin=0.1, threshmax=0.2, seed=432,
                     control=list(threshold.stop=0.05,max.time=1))
@

The result \texttt{minInfModel} is a list and \code{minInfModel$model} is an object of class \code{LogisticLogNormal}, corresponding to the model in (\ref{eq:LogisticLogNormal}), which contain our prior. A more general way to create an object of class \code{LogisticLogNormal} is with the initialization function:

<<init-LogisticLogNormal>>=
model <- LogisticLogNormal(mean=minInfModel$model@mean,
                           cov=minInfModel$model@cov,refDose=100)
@

\subsubsection*{Sampling from the posterior}

Based on the model with we just defined, we show next how to derive a posterior distribution of the model parameters, giving some data. We first need to create an object of \code{Data} class, containing our data, which can then be visualized by simply applying \code{plot} to the \code{data} object.

<<init-Data,warning=FALSE,message=FALSE,fig.width=4,fig.height=4,out.width='.3\\linewidth',fig.align='center'>>=
data <- Data(x=c(25,25,25, 50,50,50, 100,100,100), y=c(0,0,0, 0,0,0, 0,0,1),
             cohort=c(1,1,1, 2,2,2, 3,3,3), doseGrid=seq(25,300,25))
plot(data)
@

\\ Now that we have the model (including the prior) and the data in place, we can use MCMC sampling for obtaining the posterior distribution of the model parameters given the data. The MCMC sampling can be controlled with an object of class \code{McmcOptions}, which is then provided to the \code{mcmc} function, together with the \code{data} and the \code{model} objects:

<<mcmc-sampling>>=
options <- McmcOptions(burnin=1000, step=2, samples=10000)

set.seed(94)
samples <- mcmc(data, model, options)
@

The posterior distribution for the $Pr(Y=1 | x)$ can be visualized by supplying the samples, model and data to the generic \code{plot} function, which generate the posterior mean curve and 95\% equi-tailed credible intervals at each point of the dose grid from the \texttt{data} object. Note that you can also produce a similar plot without any data and would corresponds basically to the model's prior.

<<plot-model-fit,fig.show='hold',fig.width=5,fig.height=5,out.width='.35\\linewidth',fig.align='center'>>=
plot(samples, model, data) + ggtitle("Posterior")

emptydata <- Data(doseGrid=data@doseGrid)
priorsamples <- mcmc(emptydata, model, options)
plot(priorsamples, model, emptydata) + ggtitle("Prior")
@


\subsubsection*{Rules for dose escalation}
In this section we present rules for dose-escalation, including how to choose the dose for the next cohort and how to decide when to stop the study. 

We start by defining our \texttt{increment} rules, with the function \code{IncrementsRelative}, and we decide to allow maximum dose increase of: 100\% for doses below 100 mg, 50\% for doses in the range [100,200) and 33\% for doses equal or above 200 mg. Based on this rule, the maximum allowed dose increase, given our current data, can be obtained with the function \code{maxDose}:

<<rel-incrs>>=
myIncrements <- IncrementsRelative(intervals=c(0,100,200), increments=c(1,0.5,0.33))
nextMaxDose  <- maxDose(myIncrements,data)
nextMaxDose
@

We then define the rule for selecting a dose for the next cohort. In this case we would like to select the dose which maximize the probability of the toxicity rate being in the target toxity range [0.2,0.35], but with the probability of overdosing not exceeeding 25\% \citep{Neuenschwander2008}. This rule can be created with the function \code{NextBestNCRM}. Based on this rule, the dose for the next cohort, given our current data, the maximum allowed dose increase as well the posterior samples and the model, can be obtained with the function \code{nextBest}, which would also produce a plot highligthing the next suggested dose:

<<nextBest-ncrm,fig.width=4,fig.height=4,out.width='.5\\linewidth',fig.align='center'>>=
myNextBest <- NextBestNCRM(target=c(0.2,0.35), overdose=c(0.35, 1),
                           maxOverdoseProb=0.25)
nextDose <- nextBest(myNextBest,nextMaxDose, samples, model, data)
nextDose$plot
@

The number of patients in the next cohort (cohort size) can be defined with rules inhereting from the class \code{CohortSize}. In this case we will use a \texttt{fixed} cohort size of 3 patients thoughout the all study with the class \code{CohortSizeConst}. The function \code{size}, provided with the cohort-size rule, the suggested next dose and current data, will then output the size of the next cohort.

<<size-rules>>=
mySize <- CohortSizeConst(3)
size(mySize,nextDose$value,data)
@

Finally before dosing the next cohort of 3 patients at the recommended next dose of 100 mg, we want to check if the dose-escalation can actually be terminated based on our stopping rules. This can be achieved by calling the function \code{stopTrial} requiring an object of class \code{Stopping} containing our stopping rules which we define below. \\
We would like to stop if:

\begin{itemize}
  \item 30 patients were already dosed \textbf{OR}
  \item the probability to be in the target toxicity range is above 50\% \textbf{OR}
  \item 6 cohorts were already dosed \textbf{AND} 9 patients were dosed within +/- 20\% of the recommended next dose 
\end{itemize}

The output of \code{stopTrial} is of class \code{logical} and in this is case equals \code{FALSE}, meaning that based on our stopping rules the study should continue with the next cohort of 3 patients receiving a dose of 100 mg.

<<stop-rules,results='hide'>>=
myStopping1 <- StoppingMinCohorts(nCohorts=6)
myStopping2 <- StoppingMinPatients(nPatients=30)
myStopping3 <- StoppingTargetProb(target=c(0.2, 0.35),prob=0.5)
myStopping4 <- StoppingPatientsNearDose(nPatients = 9, percentage = 0.2)

myStopping <- myStopping2 | myStopping3 | (myStopping1 & myStopping4)
stopTrial(myStopping, nextDose$value, samples, model, data)
@

\subsubsection*{Deriving the Operating Characteristic of our CRM Design}
In the last topic of this setion, we want to show how to assess the performance of a given CRM design. We first need to specify our design by creating an object of class \code{Design}. It contains our model, our rules for dose escalation (\code{Increments}, \code{nextBest}, \code{Stopping} and \code{cohortSize}), the dose grid (in the example below through the object \code{emptydata}) and our starting dose.

<<design-setup>>=
design <- Design(model=model, nextBest=myNextBest, stopping=myStopping,
                 increments=myIncrements, cohortSize=mySize,
                 data=emptydata,startingDose=25)
@

We can then start by looking at the \texttt{single trial} operating characteristics of the dose escalation design with the function \code{examine}, which generates a dataframe showing the beginning of several hypothetical trial courses under the design. Assuming no DLTs have been seen until a certain dose, then the consequences of different number of DLTs being observed at this dose are shown.

<<design-examine>>=
set.seed(23)
examine(design,options)
@

For the \texttt{many trials} operating characteristics, we have to define a true scenario, from which the data should arise. In this case, this only requires a function that computes the probability of DLT given a dose. Here we use the function contained in the slot \code{prob} of the object \code{model}, for which the dose-toxicity curve is shown below.

<<true-def,fig.width=4,fig.height=4,out.width='.4\\linewidth',fig.align='center'>>=
myTruth <- function(dose){ model@prob(dose, alpha0=7, alpha1=8)}
curve(myTruth(x), from=0, to=80, ylim=c(0, 1)) # Plot the True Curve
@

Now we can proceed to the simulations using the function \code{simulate}, which requires as arguments our CRM design, the true toxicity profile, the total number of trials to be simulated and some MCMC options. The argument \code{parallel} can be set to \code{TRUE} if one wish to enable the use of all processors of the computer for running the simulations in parallel. This can yield a meaningful speedup, especially for larger number of simulations.

\textbf{Here nsim=10. Once the paper is finalized we could change it into nsim=1000}
<<run-sims>>=
mySims <- simulate(design, truth=myTruth, nsim=10,
                   seed=819,mcmcOptions=options,parallel=FALSE)
@

The result of this call is an object of class \texttt{Simulations} containing multiple slots. For example the \texttt{data} slot contains the list of produced \texttt{Data} objects of the simulated trials. Therefore, we can just use the \code{plot} function to plot the course of e.g. the third simulated trial (as shown below). The slots \code{doses} and \code{stopReasons} contain information about the final MTD and the stopping reason for each trial.

<<third-trial, fig.width=4,fig.height=4,out.width='.3\\linewidth',fig.align='center'>>=
plot(mySims@data[[3]])    # course of the third simulated trial
mySims@doses[3]           # MTD at the end of the third simulated trial
@

Furthermore, with this object, we can apply two methods. First, we can plot it, i.e. we can apply the \code{plot} method:

<<sim-plot, fig.width=4,fig.height=4,out.width='.5\\linewidth',fig.align='center'>>=
plot(mySims)
@

The resulting plot shows on the top panel a summary of the trial trajectories. On the bottom, the proportions of doses tried, averaged over the simulated trials, are shown. Note that you can select the plots by changing the \code{type} argument of \code{plot}, which by default is \code{type = c("trajectory", "dosesTried")}.

Second, we can summarize the simulation results with the \code{summary} method. Here again we have to supply a true dose-toxicity function.

<<sim-summary>>=
simSum <- summary(mySims,truth=myTruth)
simSum
@

A plot of the summary results, giving a bit more details than the textual summary, could be produced with the code \code{plot(simSum)}



\subsection{Dose escalation with safety and efficacy}

todo Winnie: 

- introduce dual endpoint designs, starting from pseudo prior approach for 
univariate design

- more details about the corresponding class structure

\subsection{Extending crmPack functionality}

todo Daniel/Winnie:

- example how new models / stopping rules can be implemented by the user -> important!

\section{Summary}\label{sec:discussion}

In this paper we have introduced the \proglang{R} package \pkg{crmPack} for analysing and evaluating dose-finding trials. Unlike existing software the package is written to make full use of a class structure enabling easy extensions to user-specific dose-response models, prior distributions, escalation and stopping rules. The package does, however, already include a wide range of model-based and algorithmic dose-escalation procedures providing end-users easy access to these approaches without the need for further coding. Another unique feature of the package is the inclusion of approaches that allow placebo data, which are routinely collected in healthy volunteer studies, to be utilized. Finally some methods \cite[e.g.][]{bekele2005,yeung2015} for dose-finding incorporating safety and efficacy are readily implemented already in the package and the underlying structure to extend to novel dual endpoint methods is provided. Simulation facilities for all approaches and relevant graphical displays are also provided.\\

Future extensions - I am not sure what to put there. It is quite comprehensive already and I dont know what is obviously missing....\\


\bibliography{article}

\end{document}
